package hw_09_10;

//    Создать программу, выводящую на экран ближайшее к 10 из двух чисел, записанных в переменные m и n.
//        Числа могут быть, как целочисленные, так и дробные.
//
//        Например :
//        ввод : m=10.5, n=10.45
//        вывод: Число 10.45 ближе к 10.
public class NearestDate {
    public static void main(String[] args) {
      double m = 10.5;
      double n = 10.45;

        // Вычисляем расстояния от m и n до 10

        double distanceFromM = Math.abs(m - 10);
        double distanceFromN = Math.abs(n - 10);


        // Определяем, какое из чисел ближе к 10
        if (distanceFromM < distanceFromN) {
            System.out.println("Ближайшее к 10 число: " + m);
        } else if (distanceFromN < distanceFromM) {
            System.out.println("Ближайшее к 10 число: " + n);
        } else {
            System.out.println("Оба числа равноудалены от 10: " + m + " и " + n);
        }
    }
}




//
//
//        №2
//        Есть устройство, на табло которого показывается количество секунд, оставшихся до конца рабочего дня. Когда рабочий день начинается ровно в 9 часов утра — табло отображает «28800» (т.е. остаётся 8 часов), когда 14:30 — на табло «9000» (т.е. остаётся два с половиной часа), а когда наступает 17 часов — на табло отображается «0» (т.е. рабочий день закончился).
//        Некоторый сотрудники не умеют оценивать остаток рабочего дня в секундах.
//        Требуется написать программу, которая вместо секунд будет выводить на табло понятные фразы с информацией о том, сколько полных часов осталось до конца рабочего дня.
//        Например: «осталось 7 часов», «осталось 4 часа», «остался 1 час», «осталось менее часа».
//        Объяснение: в переменную n должно записываться случайное (на время тестирования программы) целое число из диапазона от 0 до 28800, далее оно должно выводиться на экран (для тех, кто понимает в секундах) и на следующей строке (для тех кто не понимает) должна выводиться фраза о количестве полных часов, содержащихся в n секундах.